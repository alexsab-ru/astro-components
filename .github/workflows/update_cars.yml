name: Generate Astro Files from XML

on:
  schedule:
    - cron: '0 3-17 * * *'  # Запускается каждый час с 3 до 17 (UTC)
  push:
    paths:
      - '.github/scripts/sh/getAirStorage.sh'
      - '.github/scripts/sh/getDealerCarsPrice.sh'
      - '.github/scripts/sh/getDealerPrices.sh'
      - '.github/scripts/sh/getDealerStorage.sh'
      - '.github/scripts/sh/getSortStorage.sh'
      - '.github/scripts/CarFeedProcessorCSV.py'
      - '.github/scripts/config_air_storage-friend.json'
      - '.github/scripts/config_air_storage.json'
      - '.github/scripts/config.py'
      - '.github/scripts/getOneXML.py'
      - '.github/scripts/GSheetFetcher.js'
      - '.github/scripts/mergeCarPrices.js'
      - '.github/scripts/update_cars_air_storage.py'
      - '.github/scripts/update_cars.py'
      - '.github/scripts/utils.py'
      - '.github/workflows/update_cars.yml'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  determine_env:

    if: ${{ vars.UPDATE_CARS && vars.UPDATE_CARS == 'true' }}

    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}
    steps:
      - id: set_env
        run: |
          PROD_BRANCHES=("main" "master" "brand" "dealer") # Bash array
          CURRENT_BRANCH="${{ github.ref_name }}"
          IS_PROD=false
          for branch in "${PROD_BRANCHES[@]}"; do
            if [[ "$CURRENT_BRANCH" == "$branch" ]]; then
              IS_PROD=true
              break
            fi
          done
          if $IS_PROD; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          else
            echo "env_name=development" >> $GITHUB_OUTPUT
          fi

  build:
    needs: determine_env
    runs-on: ubuntu-latest

    # Указываете окружение и его переменные
    environment:
      name: ${{ needs.determine_env.outputs.env_name }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pnpm-store
          node_modules
          .pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: |
        npm install -g pnpm
        pnpm install --no-frozen-lockfile
        pnpm downloadJSON -f settings.json
      env:
        JSON_PATH: ${{ secrets.JSON_PATH }}
        DOMAIN: ${{ vars.DOMAIN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        architecture: "x64"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests lxml pyyaml Pillow beautifulsoup4


    - name: Get Dealer cars Storage
      if: ${{ vars.DEALER_STORAGE_CSV_URL }}
      run: |
        pnpm run getDealerStorage_new_cars_xml
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        CSV_URL: ${{ vars.DEALER_STORAGE_CSV_URL }}
        QUERY_STRING: ${{ vars.DEALER_STORAGE_CSV_COLUMN }}

    - name: Get Dealer used_cars Storage
      if: ${{ vars.USED_CARS_STORAGE_CSV_URL }}
      run: |
        pnpm run getDealerStorage_used_cars_xml
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        CSV_URL: ${{ vars.USED_CARS_STORAGE_CSV_URL }}
        QUERY_STRING: ${{ vars.USED_CARS_STORAGE_CSV_COLUMN }}


    - name: Get XML from Avito to get dealer photos for cars
      if: ${{ vars.DEALER_PHOTOS_FOR_CARS_AVITO_URL }}
      run: |
        pnpm run getOne_DEALER_PHOTOS_FOR_CARS_AVITO_URL
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.DEALER_PHOTOS_FOR_CARS_AVITO_URL }}

    - name: Get cars data_cars_car XML
      if: ${{ vars.XML_URL_DATA_CARS_CAR }}
      run: |
        pnpm getOne_XML_URL_DATA_CARS_CAR
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.XML_URL_DATA_CARS_CAR }}
        XML_URL_DATA_CARS_CAR: ${{ vars.XML_URL_DATA_CARS_CAR }}

    - name: Get cars catalog_vehicles_vehicle XML
      if: ${{ vars.XML_URL_CATALOG_VEHICLES_VEHICLE }}
      run: |
        pnpm getOne_XML_URL_CATALOG_VEHICLES_VEHICLE
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.XML_URL_CATALOG_VEHICLES_VEHICLE }}
        XML_URL_CATALOG_VEHICLES_VEHICLE: ${{ vars.XML_URL_CATALOG_VEHICLES_VEHICLE }}

    - name: Get cars vehicles_vehicle XML
      if: ${{ vars.XML_URL_VEHICLES_VEHICLE }}
      run: |
        pnpm getOne_XML_URL_VEHICLES_VEHICLE
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.XML_URL_VEHICLES_VEHICLE }}
        XML_URL_VEHICLES_VEHICLE: ${{ vars.XML_URL_VEHICLES_VEHICLE }}

    - name: Get cars ads_ad XML
      if: ${{ vars.XML_URL_ADS_AD }}
      run: |
        pnpm getOne_XML_URL_ADS_AD
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.XML_URL_ADS_AD }}
        XML_URL_ADS_AD: ${{ vars.XML_URL_ADS_AD }}

    - name: Get cars carcopy_offers_offer XML
      if: ${{ vars.XML_URL_CARCOPY_OFFERS_OFFER }}
      run: |
        pnpm getOne_XML_URL_CARCOPY_OFFERS_OFFER
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.XML_URL_CARCOPY_OFFERS_OFFER }}
        XML_URL_CARCOPY_OFFERS_OFFER: ${{ vars.XML_URL_CARCOPY_OFFERS_OFFER }}

    - name: Get used_cars data_cars_car XML
      if: ${{ vars.USED_CARS_DATA_CARS_CAR }}
      run: |
        pnpm getOne_USED_CARS_DATA_CARS_CAR
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.USED_CARS_DATA_CARS_CAR }}
        USED_CARS_DATA_CARS_CAR: ${{ vars.USED_CARS_DATA_CARS_CAR }}

    - name: Get used_cars catalog_vehicles_vehicle XML
      if: ${{ vars.USED_CARS_CATALOG_VEHICLES_VEHICLE }}
      run: |
        pnpm getOne_USED_CARS_CATALOG_VEHICLES_VEHICLE
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.USED_CARS_CATALOG_VEHICLES_VEHICLE }}
        USED_CARS_CATALOG_VEHICLES_VEHICLE: ${{ vars.USED_CARS_CATALOG_VEHICLES_VEHICLE }}

    - name: Get used_cars vehicles_vehicle XML
      if: ${{ vars.USED_CARS_VEHICLES_VEHICLE }}
      run: |
        pnpm getOne_USED_CARS_VEHICLES_VEHICLE
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.USED_CARS_VEHICLES_VEHICLE }}
        USED_CARS_VEHICLES_VEHICLE: ${{ vars.USED_CARS_VEHICLES_VEHICLE }}

    - name: Get used_cars ads_ad XML
      if: ${{ vars.USED_CARS_ADS_AD }}
      run: |
        pnpm getOne_USED_CARS_ADS_AD
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.USED_CARS_ADS_AD }}
        USED_CARS_ADS_AD: ${{ vars.USED_CARS_ADS_AD }}

    - name: Get used_cars carcopy_offers_offer XML
      if: ${{ vars.USED_CARS_CARCOPY_OFFERS_OFFER }}
      run: |
        pnpm getOne_USED_CARS_CARCOPY_OFFERS_OFFER
      continue-on-error: true
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.USED_CARS_CARCOPY_OFFERS_OFFER }}
        USED_CARS_CARCOPY_OFFERS_OFFER: ${{ vars.USED_CARS_CARCOPY_OFFERS_OFFER }}

    - name: Get air storage
      if: ${{ vars.AIR_STORAGE_CSV_URL }}
      run: |
        pnpm run getAirStorage
      env:
        CSV_URL: ${{ vars.AIR_STORAGE_CSV_URL }}

    - name: Get sort storage
      if: ${{ vars.SORT_STORAGE_CSV_URL }}
      run: |
        pnpm run getSortStorage
      env:
        CSV_URL: ${{ vars.SORT_STORAGE_CSV_URL }}

    - name: Get Dealer JSON cars price
      if: ${{ vars.DEALER_CARS_PRICE_CSV_URL }}
      run: |
        pnpm run getDealerCarsPrice
      continue-on-error: true
      env:
        CSV_URL: ${{ vars.DEALER_CARS_PRICE_CSV_URL }}


    - name: Generate src/content/cars/ and src/content/used_cars/
      run: |
        pnpm cars auto
      env:
        DOMAIN: ${{ vars.DOMAIN }}

    - name: Get Dealer XML for auto.ru and generate auto.ru xml
      if: ${{ vars.AUTORU_XML_URL && !vars.AUTORU_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py
        python .github/scripts/update_cars_air_storage.py --source_type autoru  --output_path "./public/autoru.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AUTORU_XML_URL }}

    - name: Get Dealer AutoRu xml if friend url exists
      if: ${{ vars.AUTORU_XML_URL && vars.AUTORU_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py
        python .github/scripts/update_cars_air_storage.py --source_type autoru --output_path="./public/autoru_dc.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AUTORU_XML_URL }}

    - name: Get friends AutoRu xml
      if: ${{ vars.AUTORU_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py --output_path="cars_friend.xml"
        python .github/scripts/update_cars_air_storage.py --source_type autoru --input_file cars_friend.xml --output_path="./public/autoru_friend.xml" --config_path="./.github/scripts/config_air_storage-friend.json"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AUTORU_FRIEND_XML_URL }}

    - name: Merge AutoRu xmls
      if: ${{ vars.AUTORU_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py --output_path="./public/autoru.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: "./public/autoru_dc.xml ./public/autoru_friend.xml"

    - name: Get Dealer XML for avito and generate avito xml if friend url not exists
      if: ${{ vars.AVITO_XML_URL_DATA_CARS_CAR }}
      run: |
        python .github/scripts/getOneXML.py
        python .github/scripts/update_cars_air_storage.py --source_type autoru --output_path="./public/avito.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AVITO_XML_URL_DATA_CARS_CAR }}

    - name: Get Dealer XML for avito and generate avito xml if friend url not exists
      if: ${{ vars.AVITO_XML_URL && !vars.AVITO_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py
        python .github/scripts/update_cars_air_storage.py --source_type avito --output_path="./public/avito.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AVITO_XML_URL }}

    - name: Get Dealer Avito xml if friend url exists
      if: ${{ vars.AVITO_XML_URL && vars.AVITO_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py
        python .github/scripts/update_cars_air_storage.py --source_type avito --output_path="./public/avito_dc.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AVITO_XML_URL }}

    - name: Get friends Avito xml
      if: ${{ vars.AVITO_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py --output_path="cars_friend.xml"
        python .github/scripts/update_cars_air_storage.py --source_type avito --input_file cars_friend.xml --output_path="./public/avito_friend.xml" --config_path="./.github/scripts/config_air_storage-friend.json"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: ${{ vars.AVITO_FRIEND_XML_URL }}

    - name: Merge Avito xmls
      if: ${{ vars.AVITO_FRIEND_XML_URL }}
      run: |
        python .github/scripts/getOneXML.py --output_path="./public/avito.xml"
      env:
        DOMAIN: ${{ vars.DOMAIN }}
        XML_URL: "./public/avito_dc.xml ./public/avito_friend.xml"

    - name: Set output
      id: set_output
      run: |
        if [ -s output.txt ]; then
          echo "$(cat output.txt)" > output_wrapped.txt
          # Кодируем содержимое файла в base64
          encoded_output=$(base64 -w 0 output_wrapped.txt)
          # Передаем закодированное значение
          echo "script_output=$encoded_output" >> $GITHUB_OUTPUT
        fi

    - name: ls files
      run: |
        if [[ -d src/content/cars ]]; then ls -al src/content/cars; fi
        if [[ -d src/content/used_cars ]]; then ls -al src/content/used_cars; fi
        if [[ -d src/content/special-offers ]]; then ls -al src/content/special-offers; fi
        if [[ -d src/content/news ]]; then ls -al src/content/news; fi
        if [[ -d src/content/seo ]]; then ls -al src/content/seo; fi
        if [[ -d src/data ]]; then ls -al src/data; fi
        if [[ -d tmp/feeds/new ]]; then ls -al tmp/feeds/new; fi
        if [[ -d tmp/feeds/used_cars ]]; then ls -al tmp/feeds/used_cars; fi

    - name: Check for changes
      id: check_changes
      run: |
        if git diff --exit-code; then
          echo 'check_changes true — git diff'
          echo "changes=true" >> $GITHUB_ENV
          echo "changes=true" >> $GITHUB_OUTPUT
        elif git status -s; then
          echo 'check_changes true — git status'
          echo "changes=true" >> $GITHUB_ENV
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo 'check_changes else'
          echo "changes=false" >> $GITHUB_ENV
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true

    - name: Commit files
      if: env.changes == 'true'
      run: |
        git config --local user.email "support+actions@github.com"
        git config --local user.name "github-actions-bot"
        if [[ -d public/img/thumbs && $(find public/img/thumbs -type f -name "*.webp") ]]; then git add public/img/thumbs/*.webp; fi
        if [[ -d public/img/thumbs_used && $(find public/img/thumbs_used -type f -name "*.webp") ]]; then git add public/img/thumbs_used/*.webp; fi
        if [[ -d src/content/cars && $(find src/content/cars -type f -name "*.mdx") ]]; then git add src/content/cars/*.mdx; fi
        if [[ -d src/content/used_cars && $(find src/content/used_cars -type f -name "*.mdx") ]]; then git add src/content/used_cars/*.mdx; fi
        if [[ "$GITHUB_REF_NAME" != "master" ]]; then
          if [[ -f src/data/dealer-models_cars_price.json ]]; then git add src/data/dealer-models_cars_price.json --force; fi
        fi
        if [[ -f public/cars.xml ]]; then git add public/cars.xml; fi
        if [[ -f public/used_cars.xml ]]; then git add public/used_cars.xml; fi
        if [[ -f public/autoru.xml ]]; then git add public/autoru.xml; fi
        if [[ -f public/avito.xml ]]; then git add public/avito.xml; fi
        git commit -m "Update cars from XML" -a || echo "No changes to commit"
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git push origin $GITHUB_REF_NAME
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      script_output: ${{ steps.set_output.outputs.script_output }}

  notify_telegram:
    needs: build
    if: ${{ needs.build.outputs.script_output != '' }}
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: |
        ${{ needs.build.outputs.script_output }}
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO_ERROR }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
