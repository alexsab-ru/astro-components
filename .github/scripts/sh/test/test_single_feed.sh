#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ñ–∏–¥–∞ –∏–∑ –ø–∞–ø–∫–∏ example
# –ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞: sh .github/scripts/sh/test/test_single_feed.sh

echo "üöó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ñ–∏–¥–∞"
echo "============================"

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∏–¥–æ–≤
declare -A feeds=(
    ["1"]="Ads-Ad.xml - Avito —Ñ–æ—Ä–º–∞—Ç"
    ["2"]="Ads-Ad--carcopy.xml - Avito —Ñ–æ—Ä–º–∞—Ç (CarCopy)"
    ["3"]="Ads-Ad--1c.xml - Avito —Ñ–æ—Ä–º–∞—Ç (1C)"
    ["4"]="data-cars-car--cm.expert.xml - CM Expert —Ñ–æ—Ä–º–∞—Ç"
    ["5"]="data-cars-car--1c.xml - CM Expert —Ñ–æ—Ä–º–∞—Ç (1C)"
    ["6"]="data-cars-car--carcopy.xml - CM Expert —Ñ–æ—Ä–º–∞—Ç (CarCopy)"
    ["7"]="vehicles-vehicle--maxposter.xml - MaxPoster —Ñ–æ—Ä–º–∞—Ç"
    ["8"]="avtoxml-Offers-Offer--maxposter.xml - MaxPoster —Ñ–æ—Ä–º–∞—Ç (AvtoXML)"
    ["9"]="yml_catalog-shop-offers-offer--cm.expert.xml - YML —Ñ–æ—Ä–º–∞—Ç (CM Expert)"
)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∏–¥–æ–≤
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–¥—ã:"
for key in "${!feeds[@]}"; do
    echo "  $key) ${feeds[$key]}"
done

echo ""
read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∏–¥–∞ (1-9): " choice

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞
if [[ ! "$choice" =~ ^[1-9]$ ]]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9."
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –ø–æ –≤—ã–±–æ—Ä—É
case $choice in
    1) input_file="Ads-Ad.xml" ;;
    2) input_file="Ads-Ad--carcopy.xml" ;;
    3) input_file="Ads-Ad--1c.xml" ;;
    4) input_file="data-cars-car--cm.expert.xml" ;;
    5) input_file="data-cars-car--1c.xml" ;;
    6) input_file="data-cars-car--carcopy.xml" ;;
    7) input_file="vehicles-vehicle--maxposter.xml" ;;
    8) input_file="avtoxml-Offers-Offer--maxposter.xml" ;;
    9) input_file="yml_catalog-shop-offers-offer--cm.expert.xml" ;;
esac

echo ""
echo "üìã –í—ã–±—Ä–∞–Ω: ${feeds[$choice]}"
echo "üìÅ –§–∞–π–ª: $input_file"
echo ""

# –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
rm -rf src/content/cars/*
rm -rf public/img/thumbs/*

echo "üßπ –û—á–∏—â–µ–Ω—ã –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
echo "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∏–¥..."
python .github/scripts/update_cars.py \
    --input_file ".github/scripts/example/$input_file" \
    --output_path ".github/scripts/test_results/$input_file" \
    --domain "localhost:4321" \
    --cars_dir "src/content/cars" \
    --thumbs_dir "public/img/thumbs" \
    --count_thumbs 1

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!"
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "   üìÅ –°–æ–∑–¥–∞–Ω–æ MDX —Ñ–∞–π–ª–æ–≤: $(ls -1 src/content/cars/*.mdx 2>/dev/null | wc -l)"
    echo "   üñºÔ∏è  –°–æ–∑–¥–∞–Ω–æ –ø—Ä–µ–≤—å—é: $(ls -1 public/img/thumbs/*.webp 2>/dev/null | wc -l)"
    echo ""
    echo "üåê –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "   pnpm dev"
    echo "   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:4321/cars/"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∏–¥–∞"
fi 