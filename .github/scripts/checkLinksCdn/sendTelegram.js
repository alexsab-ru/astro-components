import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const brokenLinksPath = path.join(__dirname, 'broken_links.txt');

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram
const TELEGRAM_BOT_TOKEN = '';
const TELEGRAM_CHAT_ID = '';

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (4096 —Å–∏–º–≤–æ–ª–æ–≤)
// –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–ß–∞—Å—Ç—å X/Y"
const MAX_MESSAGE_LENGTH = 4096;
const SAFE_MESSAGE_LENGTH = 3900; // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å –∑–∞–ø–∞—Å–æ–º –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise<boolean>} - –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendToTelegram(message) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID');
    return false;
  }

  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
  
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML', // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        disable_web_page_preview: true, // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–æ–∫
      }),
    });

    if (!response.ok) {
      const error = await response.json();
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
      return false;
    }

    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error.message);
    return false;
  }
}

/**
 * –†–∞–∑–±–∏–≤–∞–µ—Ç –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–∏–µ –ª–∏–º–∏—Ç Telegram
 * @param {string} text - –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @returns {string[]} - –ú–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function splitMessage(text) {
  const messages = [];
  const sections = text.split(/(?=\n====)/); // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –¥–æ–º–µ–Ω–æ–≤
  
  let currentMessage = '';
  
  for (const section of sections) {
    // –ï—Å–ª–∏ —Å–µ–∫—Ü–∏—è —Å–∞–º–∞ –ø–æ —Å–µ–±–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è, —Ä–∞–∑–±–∏–≤–∞–µ–º –µ—ë –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
    if (section.length > SAFE_MESSAGE_LENGTH) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (currentMessage) {
        messages.push(currentMessage.trim());
        currentMessage = '';
      }
      
      // –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
      const lines = section.split('\n');
      let sectionPart = '';
      
      for (const line of lines) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–∏–º–∏—Ç
        if ((sectionPart + line + '\n').length > SAFE_MESSAGE_LENGTH) {
          if (sectionPart) {
            messages.push(sectionPart.trim());
            sectionPart = '';
          }
          // –ï—Å–ª–∏ –¥–∞–∂–µ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º)
          if (line.length > SAFE_MESSAGE_LENGTH) {
            // –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
            messages.push(line.substring(0, SAFE_MESSAGE_LENGTH - 3) + '...');
          } else {
            sectionPart = line + '\n';
          }
        } else {
          sectionPart += line + '\n';
        }
      }
      
      if (sectionPart) {
        currentMessage = sectionPart;
      }
    } 
    // –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –ø—Ä–µ–≤—ã—Å–∏—Ç –ª–∏–º–∏—Ç
    else if ((currentMessage + section).length > SAFE_MESSAGE_LENGTH) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (currentMessage) {
        messages.push(currentMessage.trim());
      }
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π —Å–µ–∫—Ü–∏–∏
      currentMessage = section;
    } else {
      currentMessage += section;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (currentMessage) {
    messages.push(currentMessage.trim());
  }
  
  return messages;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
export async function sendNotificationToTelegram() {
  console.log('üìß –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram...');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
  if (!fs.existsSync(brokenLinksPath)) {
    console.log('‚úÖ –§–∞–π–ª broken_links.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.');
    return;
  }

  // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
  const content = fs.readFileSync(brokenLinksPath, 'utf8').trim();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ —Ñ–∞–π–ª
  if (!content || content.length === 0) {
    console.log('‚úÖ –§–∞–π–ª broken_links.txt –ø—É—Å—Ç. –ë–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.');
    return;
  }

  console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏! –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram...');

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
  const headerMessage = 'üö® <b>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç–∞—Ö!</b>\n';
  const fullMessage = headerMessage + content;

  // –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
  const messages = splitMessage(fullMessage);

  console.log(`üì® –û—Ç–ø—Ä–∞–≤–ª—è—é ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏${messages.length === 1 ? '–µ' : '–π/—è'}...`);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  let allSent = true;
  for (let i = 0; i < messages.length; i++) {
    const partHeader = messages.length > 1 ? `\n<i>–ß–∞—Å—Ç—å ${i + 1}/${messages.length}</i>\n\n` : '';
    const success = await sendToTelegram(partHeader + messages[i]);
    
    if (!success) {
      allSent = false;
      break;
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å rate limiting
    if (i < messages.length - 1) {
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
  }

  if (allSent) {
    console.log('‚ú® –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram');
  } else {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    process.exit(1);
  }
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é (–Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω), –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
if (import.meta.url === `file://${process.argv[1]}`) {
  sendNotificationToTelegram().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
}

