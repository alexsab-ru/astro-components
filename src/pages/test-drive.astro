---
import Layout from '@/layouts/Layout.astro';
import { AGREE_LABEL } from '@/const';
import settings from '@/data/settings.json';
const { brand, legal_city_where } = settings;
import Button from '@/components/Button/Button.astro';
import Input from '@/components/Input.astro';
import Checkbox from '@/components/Checkbox/Checkbox.astro';
import ChoosingDealerSelect from '@/components/ChoosingDealerSelect/ChoosingDealerSelect.astro';
import PageH1 from '@/components/PageH1/Index.astro';
import salonsData from '@/data/salons.json';
import type { ISalon } from '@/types/ISalon';
const salons = salonsData.filter((salon: ISalon) => !salon?.type || salon?.type.includes('test_drive'));
const salonsPhone = salons.map((salon: any) => salon.phone).filter(phone => phone).join(', ');
import modelsData from '@/data/models.json';
const { testDrive } = modelsData;
const optionsJSON = JSON.stringify(testDrive);
---

<Layout title={`Тест-драйв автомобиля ${brand} – Онлайн запись в салон официального дилера ${brand} в ${legal_city_where}`} description={`Записаться на тест-драйв автомобиля ${brand} в ${legal_city_where} вы можете на официальном сайте дилера ${brand} в ${legal_city_where}, заполнив специальную форму, или по телефонам: ${salonsPhone}`}>
	<div class="flex flex-col lg:flex-row xl:min-h-[600px]" x-data=`{
		models: null,
		current: null,
		getModels: function() {
			this.models = ${optionsJSON};
		},
		currentModel: function(id) {
			this.current = this.models.find(m => m.id === id);
		},
		init: function() {
			this.getModels();
			this.currentModel([...this.models][0].id);
		}
	}`>

		<div class="bg-cover bg-center w-full h-100% lg:w-3/5 2xl:w-1/2 overflow-hidden relative z-[1]" style="background-image: url('https://cdn.alexsab.ru/models/default-model-bg.webp')" x-cloak>
			<div class="absolute inset-0 bg-black/20 z-[-1]"></div>
			<h2 class="p-5 sm:p-10 text-2xl font-bold text-white" x-text="current?.name"></h2>
			<img :src="current?.thumb" class="mx-auto xl:h-[300px] xl:w-auto object-contain sm:w-4/5 absolute -right-20 sm:-right-32 top-1/2 -translate-y-1/2 xl:translate-y-0 xl:top-auto xl:right-auto xl:relative z-[-1]" :alt="current?.name">
			<div class="p-5 sm:p-10 flex flex-col xl:grid grid-cols-6 gap-4 mt-10 lg:mt-14 text-white xl:text-black">
				<template x-for="char in current?.globalChars">
					<div class="flex flex-col items-start justify-between xl:gap-8 xl:p-3 xl:shadow xl:shadow-white/70 rounded-xl sm:w-1/2 xl:w-auto xl:bg-white/70">
						<div class="text-xs" x-text="char.title+':'"></div>
						<div>
							<b class="text-base xl:text-lg font-bold" x-text="char.value"></b>{' '}
							<span class="xs:text-[11px]" x-text="char?.measure"></span>
						</div>
					</div>
				</template>
			</div>
		</div>

		<div class="p-5 sm:p-10 space-y-10 w-full lg:w-2/5 2xl:w-1/2" x-cloak>
			<PageH1 h1="Записаться на&nbsp;тест-драйв" classes="text-3xl sm:text-4xl font-bold text-center" />
			<div class="flex justify-center gap-4 flex-wrap">
				<template x-for="(model, index) in models" :key="model.id">
					<div class="contents">
						<!-- Невидимый разделитель перед новым брендом -->
						<div x-show="index > 0 && models[index - 1].mark_id !== model.mark_id" 
							 class="basis-full h-0"></div>
						
						<!-- Ваша кнопка -->
						<button
							class="text-sm sm:text-base py-3 px-2 sm:px-4 rounded relative"
							:class="model?.id === current?.id ? 'bg-accent-500 !text-white' : 'bg-gray-200'"
							x-html="`${model?.name} <small class='absolute top-1 right-1 text-[6px] sm:text-[8px] !leading-none text-gray-500'>${model?.mark_id}</small>`"
							@click="currentModel(model.id)"
						></button>
					</div>
				</template>
			</div>
			<form class="flex flex-col gap-4 max-w-[500px] mx-auto">
				<input type="hidden" name="form" :value="`Запись на тест-драйв. ${current?.name}`" />
				<input
					type="email"
					tabindex="-1"
					name="email"
					class="h-0 opacity-0 absolute -z-[100]"
					placeholder="mail@example.com"
				/>
				<Input name="name" classes="border-gray-100" placeholder="Ваше имя" />
				<Input
					type="tel"
					name="phone"
					classes="border-gray-100"
					placeholder="+7 (999) 999-99-99*"
					required
					errorClasses="text-red-500"
				/>

				<ChoosingDealerSelect required={true} salons={salons} />

				<Checkbox
					name="agree"
					label={AGREE_LABEL}
					color="black"
					required
					errorClasses="text-red-500 w-full"
					errorText="Чтобы продолжить, установите флажок"
				/>

				<input
					type="checkbox"
					name="subscribe"
					class="absolute w-0 h-0 opacity-0 invisible"
				/>

				<Button view="form-button" classes="w-full" title="Отправить" />
			</form>
		</div>

	</div>
</Layout>