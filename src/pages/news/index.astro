---
import PageLayout from '@/layouts/PageLayout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '@/components/FormattedDate.astro';
import { SITE_NAME } from '@/const';
import PostItem from '@/components/Post/Item.astro'

const rawPosts = await getCollection('news');

let posts, image;
// Проверяем, что массив rawPosts не пустой перед сортировкой
import { getRandomInt } from '@/js/utils/numbers.format';
if (rawPosts && rawPosts.length > 0) {
	posts = rawPosts.sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
	);

	image = posts[getRandomInt(0, posts.length)].data.image;
} else {
	// Если массив пустой, можно присвоить image значение по умолчанию или обработать этот случай
	image = ''; // или какая-то другая логика
}
export const breadcrumb = { name: "Новости", href: "/news/" };
---

<PageLayout 
	h1="Новости"
	title={`Новости | ${SITE_NAME}`}
	breadcrumb={[breadcrumb]}
	image={image ? image : ''}
	backLink={true}
>
	{
		posts ? (
			<div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-5">
				{ posts.map(post => ( <PostItem post={post} /> )) }
			</div>
		) : (
			<p>Скоро здесь появятся новости {SITE_NAME}.</p>
		)
	}
</PageLayout>