---
import PageLayout from "@/layouts/PageLayout.astro";
import { getCollection } from "astro:content";
import settings from '@/data/settings.json';
const { site_name, brand, legal_city_where } = settings;
import CarsList from '@/components/Cars/List.astro';
const rawCars = await (getCollection as any)("cars");
let cars: any, image: string;
import { getRandomInt } from "@/js/utils/numbers.format";
if (rawCars && rawCars.length > 0) {
	// Исключаем скрытые файлы
	cars = rawCars.filter((car) => !(typeof car?.id === 'string' && car.id.startsWith('__')));
	// Проверяем что есть автомобили после фильтрации и что у них есть данные
	if (cars.length > 0 && cars[0]?.data) {
		image = cars[getRandomInt(0, cars.length)].data.image;
	} else {
		image = "";
	}
} else {
	image = "";
}
export const breadcrumb = { name: "Авто в наличии", href: "/cars/" };
---

<PageLayout
	h1={`Автомобили ${brand} в наличии в ${legal_city_where}`}
	title={`Автомобили в наличии | ${site_name}`}
	description={`Автомобили ${brand} в наличии в ${legal_city_where} у официального дилера. Уточняйте комплектации, цены и сроки, записывайтесь на тест-драйв онлайн или по телефону.`}
	breadcrumb={[breadcrumb]}
	image={image ? image : ""}
	backLink={true}
>
	{
		cars ? (
			<CarsList cars={rawCars} />
		) : (
			<p>Скоро здесь появится список новых автомобилей.</p>
		)
	}
</PageLayout>

<style>
	.filter-model-link{
		@apply text-xs sm:text-base py-2 px-2 sm:px-4 no-underline rounded-md m-0;
	}
</style>
