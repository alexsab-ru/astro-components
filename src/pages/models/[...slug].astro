---
import Layout from '@/layouts/Layout.astro';
import Model from '@/components/Model/Model.astro';
import ModelComplectations from '@/components/Model/Complectations.astro';
import CarItem from "@/components/Cars/Item.astro";
import UniversalSection from '@/components/Model/sections/universal.astro';


import models from '@/data/models.json';
export async function getStaticPaths() {
  return models.filter(m => m.show).map((model) => {
    return {
      params: { slug: model.id },
      props: { model },
    };
  });
}


import { LEGAL_CITY_WHERE, BRAND } from '@/const';
import { breadcrumb } from './index.astro';
const { model } = Astro.props;

import modelsSections from '@/data/models-sections.yml';
const currentModel = modelsSections.find(m => m?.id === model.id) || {};
const sections = currentModel?.sections || [];

import { getCollection } from "astro:content";
const rawCars = await getCollection("cars");
const cars = rawCars && rawCars.length ? rawCars.filter(
  car => (
    car.data.mark_id.toLowerCase() === model.mark_id.toLowerCase()
    && (car.data.folder_id.replace(/\W/gm, '').toLowerCase() === model.id.replace(/\W/gm, '').toLowerCase()
    || (model?.feed_names ? model?.feed_names.includes(car.data.folder_id) : false) )
  )
) : [];
---
<Layout 
  title={`${model.mark_id} ${model.name} – фото, цены, комплектации и характеристики ${model.mark_id} ${model.name} в ${LEGAL_CITY_WHERE}`} 
  description={model.slogan}
  image={model.image ?? model.thumb}
>
	<Model model={model} breadcrumb={[breadcrumb, {name: model.name, href: Astro.url.pathname}]} />
  {
    sections.length > 0 && sections.map(s => ( <UniversalSection section={s} /> ))
  }
  {
    (model?.complectations !== undefined && model?.complectations.length) && <ModelComplectations model={model} brand={BRAND} />
  }
  {cars.length > 0 && (
    <section class="bg-gray-50">
      <div class="container">
        <h2 class="text-center font-medium mobile-title-size sm:text-4xl mb-8 sm:mb-14"><Fragment set:html={`Автомобили ${model.mark_id}&nbsp;${model.name} в наличии в ${LEGAL_CITY_WHERE}`} /></h2>
        <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4 gap-3 sm:gap-5 mt-5 car-list">
          {cars.map((car) => ( <CarItem car={car} /> ))}
        </div>
      </div>
    </section>
  )}
    
</Layout>