---
interface Props{
	iconName?: string;
	label?: string;
	value?: string;
	class?: string;
	iconClass?: string;
	type?: string
}
const { label, value, iconName, class: className, iconClass = 'text-3xl sm:text-4xl text-gray-500', type = '', ...rest  } = Astro.props
import { Icon } from 'astro-icon/components';
import { phoneFormat } from '@/js/utils/numbers.format';
---
<div class={className} {...rest}>
	{iconName && ( <Icon name={iconName} class={`flex-shrink-0 ${iconClass}`} /> )}
	<div>
		{label && ( <small class="text-xs sm:text-sm text-gray-500 block">{label}</small> )}
		{type === 'phone' ? (
			<a
				href={`tel:${phoneFormat(value)}`}
				class="text-sm sm:text-lg font-medium transition-colors hover:text-accent-500 goal-click-lead-tel">
				{value}
			</a>
		) : (
			<div class="text-sm sm:text-lg font-medium"><Fragment set:html={value} /></div>
		)}
	</div>
</div>