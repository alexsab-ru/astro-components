---
// interface Props{
// 	mapImg: string;
// 	salons?: any;
// }
const {salons = [], mapImg, class: className, ...rest} = Astro.props

import './map.sass';

---

<div style={`background-image: url(${mapImg})`} class={`map ${className}`} {...rest}>
	<div class="loader loader-default"></div>
	<div id="map"></div>
</div>


<script id="salons" type="application/ld+json" set:html={JSON.stringify(salons)}/>
<script>
import { phoneFormat } from '@/js/utils/numbers.format';

const e = document.querySelector("#salons");

if (e && e.textContent) {

const balloonContentHeader = name => {return `<h6 class="text-sm"><b>${name}</b></h6>`};
const balloonContentBody = (hours, phone, link) => {
	return `
	<p>${hours}</p>
	<a href="tel:${phoneFormat(phone)}" class="inline-block text-lg text-accent-500 my-1">${phone}</a><br>
	<a href="${link}" target="_blank" class="text-sm">üìç –ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç</a><br>
	`
}

const salons = JSON.parse(e.textContent)

const zoom = salons.length === 1 && salons[0].map.zoom ? salons[0].map.zoom : 6;
const parent = document.querySelector(".map");
const _ball_Offset = [-21, -58];
const _ball_Size = [43, 62];

let start_load_script = false, // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—ã–ª–∞ –ª–∏ —Ö–æ—Ç—å —Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏)
	end_load_script = false; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—ã–ª –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Å–∫—Ä–∏–ø—Ç –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é (—á—Ç–æ–±—ã –Ω–µ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –º—ã –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ)

let myMapTemp = null;

//–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞ –∏ –∑–∞—Ç–µ–º –≤—Å—Ç–∞–≤–∫–∏ –µ–µ –≤ –±–ª–æ–∫ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º "map-yandex"
function init() {
	const add = (a1, a2) => a1.map((e, i) => e + a2[i]);
	const avr = (array, length) => array.map((e, i) => e/length);
	var center = [0,0];

	if (!myMapTemp) {
		myMapTemp = new ymaps.Map("map", {
			center,
			zoom,
			controls: ["zoomControl"],
		});
	}
	myMapTemp.behaviors.disable("scrollZoom");
	salons.sort(function(a, b) {
		return b.map.coords[1] - a.map.coords[1];
	});
	salons.map((salon) => {
		center = add(center,salon.map.coords);
		const _ball_bg = salon.map.balloon ? salon.map.balloon : '/img/map.balloon.png';
		myMapTemp.geoObjects.add(
			new ymaps.Placemark(
				[salon.map.coords[0], salon.map.coords[1]],
				{
					balloonContentHeader: balloonContentHeader(salon.name),
					balloonContentBody: balloonContentBody(salon.work_hours, salon.phone, salon.map.ya_link),
					balloonContentFooter: '',
					hintContent: salon.address,
				},
				{
					iconLayout: "default#image",
					// –°–≤–æ—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –º–µ—Ç–∫–∏.
					iconImageHref: _ball_bg,
					// –†–∞–∑–º–µ—Ä—ã –º–µ—Ç–∫–∏.
					iconImageSize: _ball_Size,
					// –°–º–µ—â–µ–Ω–∏–µ –ª–µ–≤–æ–≥–æ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É–≥–ª–∞ –∏–∫–æ–Ω–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ
					// –µ—ë "–Ω–æ–∂–∫–∏" (—Ç–æ—á–∫–∏ –ø—Ä–∏–≤—è–∑–∫–∏).
					iconImageOffset: _ball_Offset,
				}
			)
		);
	});
	myMapTemp.setCenter(avr(center,salons.length));
	if(salons.length > 1) {
	myMapTemp.setBounds(myMapTemp.geoObjects.getBounds(), {
		checkZoomRange: true,
		zoomMargin: 35
	});
	}

	// myMapTemp.balloon.open(this.coords,
	//     this.balloonContentHeader + this.balloonContentFooter + this.balloonContentBody, {});
	// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å–ª–æ–µ–≤, –ø–æ—Ç–æ–º –ø–µ—Ä–≤—ã–π —Å–ª–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
	var layer = myMapTemp.layers.get(0).get(0);

	// –†–µ—à–µ–Ω–∏–µ –ø–æ callback-—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–Ω–∏—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
	waitForTilesLoad(layer).then(function (value) {
		// –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
		parent.querySelector(".loader").classList.remove("is-active");
	});
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–π–ª–æ–≤)
function waitForTilesLoad(layer) {
	return new ymaps.vow.Promise(function (resolve, reject) {
		var tc = getTileContainer(layer),
			readyAll = true;
		tc.tiles.each(function (tile, number) {
			if (!tile.isReady()) {
				readyAll = false;
			}
		});
		if (readyAll) {
			resolve();
		} else {
			tc.events.once("ready", function () {
				resolve();
			});
		}
	});
}

function getTileContainer(layer) {
	for (var k in layer) {
		if (layer.hasOwnProperty(k)) {
			if (
				layer[k] instanceof ymaps.layer.tileContainer.CanvasContainer ||
				layer[k] instanceof ymaps.layer.tileContainer.DomContainer
			) {
				return layer[k];
			}
		}
	}
	return null;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏)
function loadScript(url, callback) {
	var script = document.createElement("script");

	if (script.readyState) {
		// IE
		script.onreadystatechange = function () {
			if (script.readyState == "loaded" || script.readyState == "complete") {
				script.onreadystatechange = null;
				callback();
			}
		};
	} else {
		// –î—Ä—É–≥–∏–µ –±—Ä–∞—É–∑–µ—Ä—ã
		script.onload = function () {
			callback();
		};
	}

	script.src = url;
	document.getElementsByTagName("head")[0].appendChild(script);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–≥–¥–∞ –º—ã –Ω–∞–≤–µ–ª–∏ –Ω–∞ –±–ª–æ–∫ —Å –∫–ª–∞—Å—Å–æ–º "ymap-container"
function ymap() {
	if (!start_load_script) {
		// –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –ª–∏ —Ä–∞–∑ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞, –µ—Å–ª–∏ –¥–∞, —Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ–º

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –∫–∞—Ä—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
		parent.querySelector(".loader").classList.add("is-active");

		// –ß—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã, –º—ã –∏–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
		start_load_script = true;

		// –ó–∞–≥—Ä—É–∂–∞–µ–º API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
		loadScript(
			"https://api-maps.yandex.ru/2.1/?lang=ru_RU&loadByRequire=1",
			function () {
				end_load_script = !end_load_script;
				// –ö–∞–∫ —Ç–æ–ª—å–∫–æ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, —Å—Ä–∞–∑—É —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –∏ –ø–æ–º–µ—â–∞–µ–º –≤ –±–ª–æ–∫ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º "map-yandex"
				ymaps.ready(init);
			}
		);
	}
}

if (parent) {
	parent.onmouseenter = function () {
		ymap();
	}
}

}

</script>
