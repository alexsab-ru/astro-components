---
interface Props {
	section: {
		id?: string;
		items?: [
			{
				icon: string
				text: string
			}
		];
		suptitle?: string;
		title?: string;
		sectionClass?: string;
		text?: string;
		images?: [
			{
				url: string
				title?: string
				description?: string
			}
		];
		button?: string;
	};
	class?: string
}
const { section, class: className, ...rest } = Astro.props;
import {Icon} from 'astro-icon/components';
---

<section class={`sm:py-20 py-10 font-light model-section ${section?.sectionClass} ${className}`} id={section?.id} {...rest}>
	<div class="container">
		{section?.suptitle && (<span class="text-sm font-bold text-greenBrand"><Fragment set:html={section?.suptitle} /></span>)}
		{section?.title && (<h2 class="text-2xl sm:text-5xl font-normal mb-8 uppercase"><Fragment set:html={section?.title} /></h2>)}
		{section?.text && section?.id !== 'more' ? (
			<Fragment set:html={section?.text} />
		) : section?.text && section?.id === 'more' ? (
			<div x-data="{showMore: false}" x-cloak>
				<div 
					class="space-y-4 overflow-hidden mb-5" 
					:class="{'h-[90px]': !showMore}"
				>
					<Fragment set:html={section?.text} />
				</div>
				<span 
					class="underline cursor-pointer" 
					@click="showMore = !showMore" 
					x-text="showMore ? 'Свернуть' : 'Подробнее'"
				></span>
			</div>
		) : ('')}
		{section?.items && section?.items.length && (
			<div class="xs:flex-col flex justify-center gap-4 flex-wrap pt-10 sm:pt-20">
				{section?.items.map(item => (
					<div class="flex-1 flex flex-col items-center justify-start gap-4 px-4">
						<Icon name={item.icon} class="text-accent-500 text-5xl sm:text-7xl" />
						<p class="font-medium text-center text-xs sm:text-sm md:text-base"><Fragment set:html={item.text} /></p>
					</div>
				))}
			</div>
		)}
		{section?.images && section?.images.length > 1 ? (
			<div class="swiper simple-slider mt-8 !pb-10">
				<div class="swiper-wrapper">
					{section?.images.map(img => (
						<a href={img.url} class="swiper-slide text-center glightbox" data-title={img?.title} data-description={img?.description?.replace(/<[^>]*>/g, '').trim()} data-effect="slide" data-gallery={`gallery-${section?.id}`}>
							<div class="aspect-video relative mb-4">
								<img src={img.url} class="absolute top-0 left-0 w-full h-full object-cover object-center" />
							</div>
							{img?.title && (<h3 class="font-bold text-lg">{img?.title}</h3>)}
							{img?.description && (<div class="mt-1 mx-auto text-xs sm:text-sm"><Fragment set:html={img?.description} /></div>)}
						</a>
					))}
				</div>
				<div class="swiper-pagination simple-slider-pagination !bottom-0"></div>
				<div class="swiper-button-prev simple-slider-button-prev" />
				<div class="swiper-button-next simple-slider-button-next" />
			</div>
		) : section?.images && section?.images.length === 1 ? (
			<>
			{section.images[0]?.title && <h3 class="font-bold text-lg">{section.images[0]?.title}</h3>}
			{section.images[0]?.description && <div class="mt-1 mx-auto text-xs sm:text-sm"><Fragment set:html={section.images[0]?.description} /></div>}
			<img src={section?.images[0].url} alt={section?.title || 'ALT'} class="mt-10 sm:mt-20 max-w-full mx-auto" />
			</>
		) : ('')}
		
		{section?.button && (
			<div class="flex justify-center"><Fragment set:html={section.button} /></div>
		)}

	</div>
</section>

<script>
	import './slider';
	import '@/components/Banner/banner.scss'
</script>