---
// type DataItem = {
//   name: string;
//   price: string;
// }

interface Props {
  data: any[];
  head?: string[];
  popupText?: string | HTMLElement;
}

const { data = [], head = [], popupText } = Astro.props;
---
{
  !!data.length && (
    <table class="table-fixed">
      <tbody>

        {!!head.length && (
          <thead class="sm:sticky sm:-top-[1px] lg:top-[49px] !bg-accent-500 text-white">
            <tr>
              {head.map(th => (
                <th>{th}</th>
              ))}
            </tr>
          </thead>
        )}

        {data.map((item: any) => (
          <tr>
            {Object.keys(item).map(key => (
              <td>
                {
                  key === 'name' || key === 'title' ? (
                    popupText ? (
                      <a 
                        class="popup-link" 
                        href="#common-modal" 
                        data-title={`${popupText} <strong>${item[key]}</strong>`} 
                        data-form_name={`${popupText} ${item[key]}`}
                      >
                        {item[key]}
                      </a>
                    ) : item[key]
                  ) : key === 'image' || key === 'img' || key === 'photo' ? (
                    <img 
                      src={item[key]} 
                      class="min-w-[50px] sm:min-w-0 max-w-[250px]" 
                      width="250" 
                      height="177" 
                      alt={item?.name || 'ALT'} 
                      loading="lazy" 
                    />
                  ) : item[key]
                }
              </td>
            ))}
          </tr>
        ))}
      </tbody>
    </table>
  )
}