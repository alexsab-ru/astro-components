---
import { AGREE_LABEL } from '@/const';
import Button from '@/components/Button/Button.astro';
import Input from '@/components/Input.astro';
import Checkbox from '@/components/Checkbox/Checkbox.astro';
import FormSelect from '@/components/FormSelect.astro';
import ChoosingDealerSelect from '@/components/ChoosingDealerSelect/ChoosingDealerSelect.astro';

import salonsData from '@/data/salons.json';
import type { ISalon } from '@/types/ISalon';
const salons = salonsData.filter((salon: ISalon) => !salon?.type || salon?.type.includes('test_drive'));
interface Props{
  dataFormName?: string;
  showModelSelect?: boolean;
}
const {
  dataFormName = 'Форма обратной связи на странице',
  showModelSelect = false,
} = Astro.props;

import modelsData from '@/data/models.json';
const options = modelsData.services.map(({ id, name, mark_id }) => ({ 
	id: `${mark_id}-${id}`.toLowerCase(), 
	name: `${mark_id} ${name}` 
}));
---

<form class="flex flex-col gap-4 max-w-[500px] mx-auto">
  <input type="hidden" name="form" value={dataFormName} />
  <input
    type="email"
    tabindex="-1"
    name="email"
    class="h-0 opacity-0 absolute -z-[100]"
    placeholder="mail@example.com"
/>
  
  {showModelSelect && <FormSelect name="model" placeholder="Выберите модель" options={options} />}  
  
  <Input name="name" classes="border-gray-100" placeholder="Ваше имя" />
  <Input
    type="tel"
    name="phone"
    classes="border-gray-100"
    placeholder="+7 (999) 999-99-99*"
    required
    errorClasses="text-red-500"
  />

  <ChoosingDealerSelect required={true} salons={salons} />

  <Checkbox
    name="agree"
    label={AGREE_LABEL}
    color="black"
    required
    errorClasses="text-red-500 w-full"
    errorText="Чтобы продолжить, установите флажок"
  />

  <input
    type="checkbox"
    name="subscribe"
    class="absolute w-0 h-0 opacity-0 invisible"
  />

  <Button view="form-button" classes="w-full" title="Отправить" />
</form>