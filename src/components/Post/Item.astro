---
interface Props {
	post: any;
	isLink?: boolean;
}

import FormattedDate from '@/components/FormattedDate.astro';
import { LAST_DAY, MONTH, YEAR } from '@/js/utils/date';

const LinkKey = {
    EXTERNAL_URL: 'externalUrl',
    INTERNAL_URL: 'internalUrl',
    IS_MODAL: 'isModal',
    MAILTO: 'mailto',
    TEL: 'tel',
};

const { post, isLink = true } = Astro.props;

let date = null;
post.data?.toDate && typeof post.data?.toDate === 'boolean'
	? (date = new Date(`${YEAR}-${MONTH}-${LAST_DAY}`))
	: post.data?.toDate && typeof post.data?.toDate === 'object'
		? (date = post.data?.toDate)
		: post.data?.pubDate
			? (date = post.data?.pubDate)
			: null;

const linkKey = Object.values(LinkKey).find((k) => post?.data?.[k]);

// Проверяем какой тип ссылки используется и возвращаем объект с необходимыми параметрами
const createLink = (field: string) => {
    const base = { class: '!no-underline' };
    switch (field) {
        case LinkKey.EXTERNAL_URL:
            return {
                ...base,
                href: post.data?.externalUrl,
                target: '_blank',
                rel: 'noopener noreferrer',
            };
        case LinkKey.INTERNAL_URL:
            return {
                ...base,
                href: post.data?.internalUrl,
            };
        case LinkKey.IS_MODAL:
            return {
                href: '#common-modal',
                class: '!no-underline popup-link',
                'data-title': post.data?.title || post?.data?.caption,
                'data-subtitle': post.data?.subtitle || post?.data?.description,
                'data-form_name': post.data?.title || post?.data?.caption,
            };
        case LinkKey.MAILTO:
            return {
                ...base,
                href: `mailto:${post.data?.mailto}`,
            };
        case LinkKey.TEL:
            return {
                ...base,
                href: `tel:${post.data?.tel}`,
            };
        default:
            return {
                ...base,
                href: `/${post.collection}/${post.id}/`,
            };
    }
}
// isLink = false принудительно ведет ссылку на модальное окно, иначе смотрим какой тип ссылки используется
const link = !isLink ? createLink('isModal') : createLink(linkKey);
---
<a {...link}>
	<div class="bg-gray-50 group rounded-2xl relative aspect-video overflow-hidden lazy">
		<img src="https://cdn.alexsab.ru/loaders/simple-loading-gray.svg" data-src={post.data.image} class="absolute w-full h-full object-cover object-center transition-transform duration-300 group-hover:scale-110" alt={post.data.title} width="485" height="273" loading="lazy">
	</div>
	<div class="text-black mt-2 sm:mt-4 leading-none"><Fragment set:html={!isLink ? post.data.description : post.data.caption || post.data.title} /></div>
	{date && (<FormattedDate date={date} toDate={post.data?.toDate ? true : false} />)}
</a>